<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.cicoding</groupId>
	<artifactId>springboot-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<!-- 数据库QQ登录 -->
		<module>security-login-db-and-qq</module>
		<!-- security数据库登录 -->
		<module>security-login-db</module>
		<!-- oauth2协议qq登录 -->
		<module>security-oauth2-qq</module>
		<!-- spring注解打印 -->
		<module>spring-annotation</module>
		<!-- springboot集成i18n -->
		<module>springboot-i18n</module>
		<!-- aop动态切换数据源 -->
		<module>springboot-multi-data-source-aop-switch</module>
		<!-- mybatis pagehelper分页 -->
		<module>microservice-mybatis-pagehelper</module>
		<!-- hikaricp数据源配置整合 -->
		<module>spring-boot-mybatis-hikaricp</module>
		<!-- springboot集成fastdfs -->
		<module>springboot-fastdfs</module>
		<!-- springboot集成mail邮件发送 -->
		<module>spring-boot-mail</module>
		<!-- springboot自定义runner -->
		<module>springboot-runner</module>
		<!-- 日志集成 -->
		<module>spring-boot-logging-change-logging-level</module>
		<!-- swagger doc集成 -->
		<module>springboot-swagger-doc</module>
		<!-- hello world -->
		<module>springboot-introduction</module>
		<!-- resultful api -->
		<module>springboot-restful-api</module>
		<!-- swagger2 api 整合 -->
		<module>springboot-swagger2-api</module>
		<!-- Jsr303 -->
		<module>springboot-jsr-303</module>
		<!-- swagger接口使用规则 -->
		<module>springboot-swagger-interface-sort</module>
		<!-- springboot中使用spring4all的swagger2 -->
		<module>springboot-swagger2-doc-springforall</module>
		<module>springboot-profiles</module>
		<!-- springboot mybatis optional 使用 -->
		<module>spring-boot-mybatis-optional</module>
		<!-- pringboot json操作 alibaba fastjson	-->
		<module>springboot-json</module>
		<!-- mysql  整合 mybatis  curd 示例 -->
		<module>springboot-mybatis-curd</module>
		<!-- mysql  整合 mybatis-plus  curd 示例 -->
		<module>springboot-mybatisplus-curd</module>
		<!-- SpringBoot 跨域配置 -->
		<module>SpringBoot-Cors</module>
		<!-- Springboot war 包打包 -->
		<module>springboot-war</module>
		<module>springboot-cors</module>
		<!-- SpringBoot 全局异常配置-->
		<module>springboot-globalexception</module>
		<!-- Freemarker 模板引擎整合-->
		<module>springboot-freemarker</module>
		<!-- Thymeleaf 模板引擎整合 -->
		<module>springboot-thymeleaf</module>
		<!-- devtools 热部署-->
		<module>springboot-devtools</module>
		<!-- SpringBoot 文件上传-->
		<module>springboot-fileupload</module>
		<!-- springboot-initializr -->
		<module>springboot-initializr</module>
		<!-- SpringBoot-RequestMethod -->
		<module>springboot-requestmethod</module>
		<!-- 单元测试 -->
		<module>springboot-test</module>
		<!-- SpringBoot Filter 自定义过滤器-->
		<module>springboot-filter</module>
		<!-- 自定义过滤器 -->
		<module>springboot-interceptor</module>
		<!-- 多环境配置 -->
		<module>springboot-multipart-environment</module>
		<!-- SpringBoot JPA -->
		<module>springboot-jpa</module>
		<!-- 快速开始 -->
		<module>spirngboot-quickstart</module>
		<!-- 在springboot中使用Guava基于令牌桶实现限流 -->
		<module>springboot-guava-current-limiting</module>
		<!-- spring4all swagger2 api接口配置-->
		<module>springboot-swagger2-api</module>
		<!-- springboot-swagger2-doc-springforall 生成文档 -->
		<module>springboot-swagger2-doc-springforall</module>
		<!-- swagger生成文档 -->
		<module>springboot-swagger-doc</module>
		<!-- spring4all swagger示例-->
		<module>springboot-swagger-interface-sort</module>
		<!-- 单元测试 -->
		<module>springboot-test</module>
		<!-- Thymeleaf 模板引擎整合 -->
		<module>springboot-thymeleaf</module>
		<!-- jmeter测试SpringBoot+Redis令牌桶算法实现接口限流实例 -->
		<module>springboot-token-bucket-current-limiting-example</module>
		<!-- Springboot war 包打包 -->
		<module>springboot-war</module>
		<!-- springboot redis 监听key过期事件 -->
		<module>springboot-redis-delay</module>
		<!-- 有赞设计的延时消息 -->
		<module>springboot-redis-delay-01</module>
		<!-- springboot redis 发布订阅 -->
		<module>springboot-redis-sub-pub</module>
		<!-- springboot整合es data thymeleaf -->
		<module>springboot-elasticsearch</module>
		<!-- springboot整合es高级客户端 -->
		<module>springboot-elasticsearch-rest-high-level-client</module>
		<!-- springboot整合es data -->
		<module>springboot-starter-data-elasticsearch</module>
		<!-- springboot基于redis防重提交 -->
		<module>spring-boot-submit-intercept</module>
		<!-- springboot整合redis指定数据库位置写入 -->
		<module>springboot-redis-dynamic-db</module>
		<!-- springboot整合redis 基于aop的防重提交 -->
		<module>springboot-redis-dynamic-db-fangchong</module>
		<!-- springboot整合mongodb存储文件 -->
		<module>springboot-mongo-upload</module>
		<module>springboot2-markdown-thymeleaf</module>
		<module>springboot2-mybatis</module>
		<module>springboot2-mybatis-thymeleaf</module>
		<module>springboot-markdown-freemaker</module>
		<module>springboot-mybatis-plus-dynamic-datasource</module>


	</modules>
</project>