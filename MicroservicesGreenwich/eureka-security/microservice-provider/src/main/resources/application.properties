server.port=8080

eureka.instance.hostname=localhost

#### 数据库连接池属性
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mytest?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root
#自动提
spring.datasource.default-auto-commit=true
#指定updates是否自动提交
spring.datasource.auto-commit=true
spring.datasource.maximum-pool-size=100
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=false
spring.datasource.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.time-between-eviction-runs-millis=18800
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000

# mybatis对应的映射文件路径
mybatis.mapper-locations=classpath:mapper/*.xml
# mybatis对应的实体类
mybatis.type-aliases-package=com.example.model

#logging.config = classpath:logback.xml
#logging.level.root=info
#logging.level.com.example= debug

# 指定注册到eureka server上的服务名称
spring.application.name=microservice-provider


spring.boot.admin.client.url=http://localhost:8788


# 开放所有监控端点
management.endpoints.web.exposure.include=*
# 是否展示健康检查详情
management.endpoint.health.show-details = always

# 指定eureka server通信地址，注意/eureka/小尾巴不能少
#eureka.client.service-url.defaultZone=http://10.254.193.30:9001/eureka/,http://10.254.193.31:9002/eureka/,http://10.254.193.32:9003/eureka/
eureka.client.service-url.defaultZone=http://a:a@${eureka.instance.hostname}:8888/eureka/

# 是否注册IP到eureka server，如不指定或设为false，那就会注册主机名到eureka server
#eureka.instance.prefer-ip-address=true
#eureka.instance.ip-address=10.254.193.120
#eureka.instance.prefer-ip-address=false
#eureka.instance.hostname=10.254.193.129
logging.level.web=trace