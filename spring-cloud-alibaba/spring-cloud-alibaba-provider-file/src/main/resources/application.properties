server.port=8080
#### 数据库连接池属性
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3307/mytest?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&allowPublicKeyRetrieval=true&serverTimezone=UTC&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root
#自动提
spring.datasource.default-auto-commit=true
#指定updates是否自动提交
spring.datasource.auto-commit=true
spring.datasource.maximum-pool-size=100
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=false
spring.datasource.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.time-between-eviction-runs-millis=18800
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
# mybatis对应的映射文件路径
mybatis.mapper-locations=classpath:mapper/*.xml
# mybatis对应的实体类
mybatis.type-aliases-package=cn.cicoding.model
# 指定注册到eureka server上的服务名称
spring.application.name=spring-cloud-alibaba-provider-file
# 是否展示健康检查详情
management.endpoint.health.show-details=always
# 注册到public(保留空间)中
# https://github.com/alibaba/spring-cloud-alibaba/wiki/Nacos-discovery
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
spring.cloud.nacos.discovery.ip=127.0.0.1
# 开放所有监控端点
management.endpoints.web.exposure.include = *
##注册中心 nacos   根据命名空间来注册到nacos
#spring.cloud.nacos.discovery.namespace=test
#spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
#spring.cloud.nacos.discovery.ip=127.0.0.1
#spring.cloud.nacos.discovery.service=${spring.application.name}
## 开放所有监控端点
#management.endpoints.web.exposure.include=*
spring.cloud.nacos.discovery.enabled=true